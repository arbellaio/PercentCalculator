<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Amount" xml:space="preserve">
    <value>Amount:</value>
  </data>
  <data name="Answer" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="Calculate" xml:space="preserve">
    <value>Calculate</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>% Change</value>
  </data>
  <data name="CompoundFrequency" xml:space="preserve">
    <value>Compound frequency Per Year:</value>
  </data>
  <data name="CompoundInterest" xml:space="preserve">
    <value>COMPOUND INTEREST</value>
  </data>
  <data name="CompoundInterest1" xml:space="preserve">
    <value>Compound Interest</value>
  </data>
  <data name="Cost" xml:space="preserve">
    <value>Cost:</value>
  </data>
  <data name="CumulativeGrowthCalculator" xml:space="preserve">
    <value>CUMULATIVE GROWTH CALCULATOR</value>
  </data>
  <data name="CumulativeGrowthCalculator1" xml:space="preserve">
    <value>Cumulative Growth Calculator</value>
  </data>
  <data name="Difference" xml:space="preserve">
    <value>Difference:</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="DoublingCalculator" xml:space="preserve">
    <value>DOUBLING CALCULATOR</value>
  </data>
  <data name="DoublingCalculator1" xml:space="preserve">
    <value>Doubling Calculator</value>
  </data>
  <data name="Doublingt" xml:space="preserve">
    <value>Doubling t:</value>
  </data>
  <data name="EndYear" xml:space="preserve">
    <value>End year:</value>
  </data>
  <data name="EnterFirstValue" xml:space="preserve">
    <value>Enter 1st Value:</value>
  </data>
  <data name="EnterSecondValue" xml:space="preserve">
    <value>Enter 2nd Value:</value>
  </data>
  <data name="FinalBalance" xml:space="preserve">
    <value>Final balance:</value>
  </data>
  <data name="FinalValue" xml:space="preserve">
    <value>Final value:</value>
  </data>
  <data name="FractionToPercentage" xml:space="preserve">
    <value>FRACTION TO PERCENTAGE</value>
  </data>
  <data name="FractionToPercentage1" xml:space="preserve">
    <value>Fraction to Percentage</value>
  </data>
  <data name="FromValue" xml:space="preserve">
    <value>From Value:</value>
  </data>
  <data name="GrossPrice" xml:space="preserve">
    <value>Gross Price:</value>
  </data>
  <data name="GrowthRate" xml:space="preserve">
    <value>Growth Rate</value>
  </data>
  <data name="Increase" xml:space="preserve">
    <value>Increase:</value>
  </data>
  <data name="Increas" xml:space="preserve">
    <value>Increase</value>
  </data>
  <data name="IncreaseBy" xml:space="preserve">
    <value>Increase By</value>
  </data>
  <data name="Inflation" xml:space="preserve">
    <value>Inflation:</value>
  </data>
  <data name="InflationCalculator" xml:space="preserve">
    <value>INFLATION CALCULATOR</value>
  </data>
  <data name="InflationCalculator1" xml:space="preserve">
    <value>Inflation Calculator</value>
  </data>
  <data name="InitialBalance" xml:space="preserve">
    <value>Initial balance:</value>
  </data>
  <data name="InitialValue" xml:space="preserve">
    <value>Initial value:</value>
  </data>
  <data name="InterestRate" xml:space="preserve">
    <value>Interest rate:</value>
  </data>
  <data name="IsSameAs" xml:space="preserve">
    <value>is same as</value>
  </data>
  <data name="IsWhatPercentOf" xml:space="preserve">
    <value>is what percent of</value>
  </data>
  <data name="LoanCalculator" xml:space="preserve">
    <value>LOAN CALCULATOR</value>
  </data>
  <data name="LoanCalculator1" xml:space="preserve">
    <value>Loan Calculator</value>
  </data>
  <data name="Margin" xml:space="preserve">
    <value>Margin:</value>
  </data>
  <data name="MarginCalculator" xml:space="preserve">
    <value>MARGIN CALCULATOR</value>
  </data>
  <data name="MarginCalculator1" xml:space="preserve">
    <value>Margin Calculator</value>
  </data>
  <data name="Markup" xml:space="preserve">
    <value>Markup:</value>
  </data>
  <data name="MarkupCalculator" xml:space="preserve">
    <value>MARKUP CALCULATOR</value>
  </data>
  <data name="MarkupCalculator1" xml:space="preserve">
    <value>Markup Calculator</value>
  </data>
  <data name="NetPrice" xml:space="preserve">
    <value>Net Price:</value>
  </data>
  <data name="NoOfPeople" xml:space="preserve">
    <value>No. of People:</value>
  </data>
  <data name="NumberOfPeriods" xml:space="preserve">
    <value>Number Of Periods:</value>
  </data>
  <data name="NumberOfYears" xml:space="preserve">
    <value>Number of years:</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>% Of</value>
  </data>
  <data name="off" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="PercentageCalculator" xml:space="preserve">
    <value>PERCENTAGE CALCULATOR</value>
  </data>
  <data name="PercentageCalculator1" xml:space="preserve">
    <value>Percentage Calculator</value>
  </data>
  <data name="PercentageChange" xml:space="preserve">
    <value>PERCENTAGE CHANGE</value>
  </data>
  <data name="PercentageChange1" xml:space="preserve">
    <value>Percentage Change</value>
  </data>
  <data name="PercentageDiscount" xml:space="preserve">
    <value>PERCENTAGE DISCOUNT</value>
  </data>
  <data name="PercentageDiscount1" xml:space="preserve">
    <value>Percentage Discount</value>
  </data>
  <data name="PercentageIncrease" xml:space="preserve">
    <value>PERCENTAGE INCREASE</value>
  </data>
  <data name="PercentageIncrease1" xml:space="preserve">
    <value>Percentage Increase</value>
  </data>
  <data name="PercentageOf" xml:space="preserve">
    <value>PERCENTAGE OF</value>
  </data>
  <data name="PercentageOf1" xml:space="preserve">
    <value>Percentage Of</value>
  </data>
  <data name="PercentCalculator" xml:space="preserve">
    <value>Percent Calculator</value>
  </data>
  <data name="Profit" xml:space="preserve">
    <value>Profit:</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result:</value>
  </data>
  <data name="Revenue" xml:space="preserve">
    <value>Revenue:</value>
  </data>
  <data name="SalesTax" xml:space="preserve">
    <value>SALES TAX</value>
  </data>
  <data name="SalesTax1" xml:space="preserve">
    <value>Sales Tax</value>
  </data>
  <data name="SalesTaxPercentage" xml:space="preserve">
    <value>Sales Tax:</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="Selling" xml:space="preserve">
    <value>Selling:</value>
  </data>
  <data name="StartYear" xml:space="preserve">
    <value>Start year:</value>
  </data>
  <data name="TaxAmount" xml:space="preserve">
    <value>Tax Amount:</value>
  </data>
  <data name="TipAmount" xml:space="preserve">
    <value>Tip Amount:</value>
  </data>
  <data name="TipCalculator" xml:space="preserve">
    <value>TIP CALCULATOR</value>
  </data>
  <data name="TipCalculator1" xml:space="preserve">
    <value>Tip Calculator</value>
  </data>
  <data name="TipPercentage" xml:space="preserve">
    <value>Tip Percentage:</value>
  </data>
  <data name="TotalAmount" xml:space="preserve">
    <value>Total Amount:</value>
  </data>
  <data name="TotalGrowth" xml:space="preserve">
    <value>Total Growth:</value>
  </data>
  <data name="TotalInflation" xml:space="preserve">
    <value>Total inflation:</value>
  </data>
  <data name="TotalPerPerson" xml:space="preserve">
    <value>Total Per Person:</value>
  </data>
  <data name="TotalToPay" xml:space="preserve">
    <value>Total To Pay:</value>
  </data>
  <data name="ToValue" xml:space="preserve">
    <value>To Value:</value>
  </data>
  <data name="Vat" xml:space="preserve">
    <value>VAT:</value>
  </data>
  <data name="VatCalculator" xml:space="preserve">
    <value>VAT CALCULATOR</value>
  </data>
  <data name="VatCalculator1" xml:space="preserve">
    <value>Vat Calculator</value>
  </data>
  <data name="Whatis" xml:space="preserve">
    <value>What is</value>
  </data>
  <data name="By" xml:space="preserve">
    <value>By</value>
  </data>
  <data name="With" xml:space="preserve">
    <value>with</value>
  </data>
  <data name="Discoun" xml:space="preserve">
    <value>discount</value>
  </data>
  <data name="PoDescription1" xml:space="preserve">
    <value>is what percent of</value>
  </data>
  <data name="PchDescription1" xml:space="preserve">
    <value>Price hike from</value>
  </data>
  <data name="PchDescription2" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="TcDescription" xml:space="preserve">
    <value>Calculate that distributes restaurant bill evenly</value>
  </data>
  <data name="MgDescription" xml:space="preserve">
    <value>Calculates selling price based on margin</value>
  </data>
  <data name="MkDescription" xml:space="preserve">
    <value>Calculates revenue based on markup</value>
  </data>
  <data name="StDescription" xml:space="preserve">
    <value>Calculates sales tax from Tax %</value>
  </data>
  <data name="fractionPercentage" xml:space="preserve">
    <value>Calculate percentage from fraction.</value>
  </data>
  <data name="compoundInterest2" xml:space="preserve">
    <value>Calculates Compound Interest</value>
  </data>
  <data name="vat1" xml:space="preserve">
    <value>Calculates VAT</value>
  </data>
  <data name="doubling" xml:space="preserve">
    <value>Calculates Amount Doubling Time</value>
  </data>
  <data name="inflation1" xml:space="preserve">
    <value>Calculates Inflation By Time</value>
  </data>
  <data name="cumulative" xml:space="preserve">
    <value>Calculates Cumulative Growth</value>
  </data>
  <data name="loan1" xml:space="preserve">
    <value>Calculates Loan Over Time</value>
  </data>
  <data name="GrossCost" xml:space="preserve">
    <value>Gross Cost:</value>
  </data>
  
  <data name="MarginSalesTax" xml:space="preserve">
    <value>MARGIN AND SALES TAX CALCULATOR</value>
  </data>
  <data name="MarginSalesTax2" xml:space="preserve">
    <value>Margin and Sales Tax Calculator</value>
  </data>
  <data name="MarginVat" xml:space="preserve">
    <value>MARGIN AND VAT CALCULATOR</value>
  </data>
  <data name="MarginVat2" xml:space="preserve">
    <value>Margin and Vat Calculator</value>
  </data>
  <data name="MsDescription" xml:space="preserve">
    <value>Calculator Margin and Sales Tax</value>
  </data>
  <data name="MvDescription" xml:space="preserve">
    <value>Calculates Margin and Vat</value>
  </data>
</root>